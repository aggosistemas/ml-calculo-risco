name: CI/CD Pipeline para ML

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ml-calculo-risco
  DOCKER_HUB_REPO: ${{ secrets.DOCKER_HUB_USERNAME }}/ml-calculo-risco

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Instalar FastAPI explicitamente
        run: pip install fastapi==0.110.0

      - name: Instalar dependências
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes unitários e de integração
        run: |
          export PYTHONPATH=$PWD
          pytest --maxfail=3 --disable-warnings -v --junitxml=report.xml

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=ml-calculo-risco
            -Dsonar.sources=.
            -Dsonar.python.coverage.reportPaths=report.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-push:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build e Push da imagem Docker
        run: |
          docker build -t $DOCKER_HUB_REPO:latest .
          docker push $DOCKER_HUB_REPO:latest

  deploy-gke:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar no GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar kubectl
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setar cluster do GKE
        run: |
          gcloud container clusters get-credentials cluster-machine-learning \
            --zone us-central1 \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Aplicar deployment no GKE
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
